# choice <- c("QID96", "QID269", "QID277", "QID279") # Werte
# vals <- qid_values
# transform the data
dat <- split_cjp(vote, qid_values, support, choice)
## (2) recode variable format and content (languages)
# to character
dat[,  c("attrib1_lab", "attrib2_lab", "attrib3_lab", "attrib4_lab", "attrib5_lab", "attrib6_lab", "attrib7_lab")] <- sapply(dat[,  c("attrib1_lab", "attrib2_lab", "attrib3_lab", "attrib4_lab", "attrib5_lab", "attrib6_lab", "attrib7_lab")], as.character)
# recode labels of the conjoint (French / German) for uniform labelling
dat$attrib1_lab[dat$attrib1_lab %in% c("Agri-PV-Anlage auf Gewächshäusern und Ersatz von Folientunneln", "Installations agri-PV sur des serres et remplacement de tunnels en plastique")] <- "Agri-PV systems on greenhouses and replacement of polytunnels"
dat$attrib1_lab[dat$attrib1_lab %in% c("Horizontale Freiflächen Agri-PV-Anlage auf Weide- oder Ackerland", "Surfaces libres horizontales pour installations agri-PV sur des pâturage ou des terres cultivées")] <-  "Horizontal open space Agri-PV systems on pasture or arable land"
dat$attrib1_lab[dat$attrib1_lab %in% c("Vertikale Freiflächen Agri-PV-Anlage auf Weide- oder Ackerland", "Surfaces libres verticales pour installations agri-PV sur des pâturages ou des terres cultivées ")] <-  "Vertical open space Agri-PV systems on pasture or arable land"
dat$attrib2_lab[grepl("1ha)", dat$attrib2_lab, fixed = T)] <- "Up to one football pitch (approx. 1ha)"
dat$attrib2_lab[grepl("5ha)", dat$attrib2_lab, fixed = T)] <- "Up to 5 football pitches (approx. 5ha)"
dat$attrib2_lab[grepl("10ha)", dat$attrib2_lab, fixed = T)] <- "Up to 10 football pitches (approx. 10ha)"
dat$attrib3_lab[grepl("0-500", dat$attrib3_lab, fixed = T)] <- "0-500 meters"
dat$attrib3_lab[grepl("500-1500", dat$attrib3_lab, fixed = T)] <- "500-1500 meters"
dat$attrib3_lab[grepl("1500-4500", dat$attrib3_lab, fixed = T)] <- "1500-4500 meters"
dat$attrib4_lab[dat$attrib4_lab %in% c("Gemeinde", "Commune")] <- "Municipality"
dat$attrib4_lab[dat$attrib4_lab %in% c("Regionaler Energieversorger", "Fournisseur régional d'énergie")] <-  "Regional energy supplier"
dat$attrib4_lab[dat$attrib4_lab %in% c("Bäuerinnen und Bauern", "Paysans et paysannes")] <-  "Farmers"
dat$attrib4_lab[dat$attrib4_lab %in% c("Grundstückseigentümer", "Propriétaire du terrain")] <- "Landowner"
dat$attrib4_lab[dat$attrib4_lab %in% c("Energiegenossenschaft (z.B. lokale Bevölkerung)", "Coopérative énergétique (par ex. citoyens locaux)")] <- "Energy cooperative (e.g. local population)"
dat$attrib4_lab[dat$attrib4_lab %in% c("Externe (nicht lokale) Investoren", "Investisseurs externes (non locaux)")] <- "External (non-local) investors"
dat$attrib5_lab[grepl("0-5%", dat$attrib5_lab, fixed = T)] <- "0-5% reduction in crop yield"
dat$attrib5_lab[grepl("6-10%", dat$attrib5_lab, fixed = T)] <- "6-10% reduction in crop yield"
dat$attrib5_lab[grepl("11-20%", dat$attrib5_lab, fixed = T)] <- "11-20% reduction in crop yield"
dat$attrib5_lab[grepl("21-40%", dat$attrib5_lab, fixed = T)] <- "21-40% reduction in crop yield"
dat$attrib5_lab[grepl("41-80%", dat$attrib5_lab, fixed = T)] <- "41-80% reduction in crop yield"
dat$attrib6_lab[grepl("0-5%", dat$attrib6_lab, fixed = T)] <- "0-5% increase in own production"
dat$attrib6_lab[grepl("6-10%", dat$attrib6_lab, fixed = T)] <- "6-10% increase in own production "
dat$attrib6_lab[grepl("11-20%", dat$attrib6_lab, fixed = T)] <- "11-20% increase in own production"
dat$attrib6_lab[grepl("21-40%", dat$attrib6_lab, fixed = T)] <- "21-40% increase in own production"
dat$attrib6_lab[grepl("41-80%", dat$attrib6_lab, fixed = T)] <- "41-80% increase in own production"
dat$attrib7_lab[grepl("0-5%", dat$attrib7_lab, fixed = T)] <- "0-5% higher income"
dat$attrib7_lab[grepl("6-10%", dat$attrib7_lab, fixed = T)] <- "6-10% higher income"
dat$attrib7_lab[grepl("11-20%", dat$attrib7_lab, fixed = T)] <- "11-20% higher income"
dat$attrib7_lab[grepl("21-40%", dat$attrib7_lab, fixed = T)] <- "21-40% higher income"
dat$attrib7_lab[grepl("41-80%", dat$attrib7_lab, fixed = T)] <- "41-80% higher income"
# check that none are NA, should be FALSE
any(sapply(dat[, c("attrib2_lab", "attrib3_lab", "attrib4_lab", "attrib5_lab", "attrib6_lab")], is.na))
## (3) transform DVs
# create numeric rate variable
dat$rate <- as.numeric(dat$rate)
## (4) create numeric attributes
dat[, "Attrib1"] <- ""
dat$Attrib1[grepl("Agri-PV systems on greenhouses and replacement of polytunnels", dat$attrib1_lab)] <- 1
dat$Attrib1[grepl("Horizontal open space Agri-PV systems on pasture or arable land", dat$attrib1_lab)] <- 2
dat$Attrib1[grepl("Vertical open space Agri-PV systems on pasture or arable land", dat$attrib1_lab)] <- 3
dat[, "Attrib2"] <- ""
dat$Attrib2[grepl('1ha', dat$attrib2_lab)] <- 1
dat$Attrib2[grep('5ha', dat$attrib2_lab)] <- 2
dat$Attrib2[grepl('10ha', dat$attrib2_lab)] <- 3
dat[, "Attrib3"] <- ""
dat$Attrib3[grepl('0-500', dat$attrib3_lab)] <- 1
dat$Attrib3[grepl('500-1500', dat$attrib3_lab)] <- 2
dat$Attrib3[grepl('1500-4500', dat$attrib3_lab)] <- 3
dat[, "Attrib4"] <- ""
dat$Attrib4[grepl('Municipality', dat$attrib4_lab)] <- 1
dat$Attrib4[grepl('Regional energy supplier', dat$attrib4_lab)] <- 2
dat$Attrib4[grepl('Farmers', dat$attrib4_lab)] <- 3
dat$Attrib4[grepl('Landowner', dat$attrib4_lab)] <- 4
dat$Attrib4[grepl('Energy cooperative', dat$attrib4_lab)] <- 5
dat$Attrib4[grepl('External', dat$attrib4_lab)] <- 6
dat[, "Attrib5"] <- ""
dat$Attrib5[grepl('0-5%', dat$attrib5_lab)] <- 1
dat$Attrib5[grepl('6-10%', dat$attrib5_lab)] <- 2
dat$Attrib5[grepl('11-20%', dat$attrib5_lab)] <- 3
dat$Attrib5[grepl('21-40%', dat$attrib5_lab)] <- 4
dat$Attrib5[grepl('41-80%', dat$attrib5_lab)] <- 5
dat[, "Attrib6"] <- ""
dat$Attrib6[grepl('0-5%', dat$attrib6_lab)] <- 1
dat$Attrib6[grepl('6-10%', dat$attrib6_lab)] <- 2
dat$Attrib6[grepl('11-20%', dat$attrib6_lab)] <- 3
dat$Attrib6[grepl('21-40%', dat$attrib6_lab)] <- 4
dat$Attrib6[grepl('41-80%', dat$attrib6_lab)] <- 5
dat[, "Attrib7"] <- ""
dat$Attrib7[grepl('0-5%', dat$attrib7_lab)] <- 1
dat$Attrib7[grepl('6-10%', dat$attrib7_lab)] <- 2
dat$Attrib7[grepl('11-20%', dat$attrib7_lab)] <- 3
dat$Attrib7[grepl('21-40%', dat$attrib7_lab)] <- 4
dat$Attrib7[grepl('41-80%', dat$attrib7_lab)] <- 5
# replace parentheses because they seem to create problems when reading the data into the function
dat$attrib2_lab <- gsub("\\s*\\([^\\)]+\\)", "", as.character(dat$attrib2_lab))
dat$attrib3_lab <- gsub("\\s*\\([^\\)]+\\)", "", as.character(dat$attrib3_lab))
dat$attrib4_lab <- gsub("\\s*\\([^\\)]+\\)", "", as.character(dat$attrib4_lab))
dat$attrib5_lab <- gsub("\\s*\\([^\\)]+\\)", "", as.character(dat$attrib5_lab))
dat$attrib6_lab <- gsub("\\s*\\([^\\)]+\\)", "", as.character(dat$attrib6_lab))
dat$attrib7_lab <- gsub("\\s*\\([^\\)]+\\)", "", as.character(dat$attrib7_lab))
## (4) reformat
# transform all to factor
dat[,  c("Attrib1", "Attrib2", "Attrib3", "Attrib4", "Attrib5", "Attrib6", "Attrib7")] <- sapply(dat[,  c("Attrib1", "Attrib2", "Attrib3", "Attrib4", "Attrib5", "Attrib6", "Attrib7")], as.factor)
# transform all to factor with ordered levels
dat$attrib1_lab <- factor(dat$attrib1_lab, levels = c("Agri-PV systems on greenhouses and replacement of polytunnels", "Horizontal open space Agri-PV systems on pasture or arable land", "Vertical open space Agri-PV systems on pasture or arable land"))
dat$attrib2_lab <- factor(dat$attrib2_lab, levels = c("Up to one football pitch", "Up to 5 football pitches", "Up to 10 football pitches"))
dat$attrib3_lab <- factor(dat$attrib3_lab, levels = c("0-500 meters", "500-1500 meters", "1500-4500 meters"))
dat$attrib4_lab <- factor(dat$attrib4_lab, levels = c("Municipality", "Regional energy supplier", "Farmers", "Landowner", "Energy cooperative", "External investors"))
dat$attrib5_lab <- factor(dat$attrib5_lab, levels = c("0-5% reduction in crop yield", "6-10% reduction in crop yield", "11-20% reduction in crop yield", "21-40% reduction in crop yield", "41-80% reduction in crop yield"))
dat$attrib6_lab <- factor(dat$attrib6_lab, levels = c("0-5% increase in own production", "6-10% increase in own production ", "11-20% increase in own production", "21-40% increase in own production", "41-80% increase in own production"))
dat$attrib7_lab <- factor(dat$attrib7_lab, levels = c("0-5% higher income", "6-10% higher income", "11-20% higher income", "21-40% higher income", "41-80% higher income"))
dat$choice <- ifelse(dat$choice == 2, 1, 0)
dat$rate_binary <- ifelse(dat$rate > 4, 1, 0)
######################################################
# recode explanatory variables
######################################################
# dat_desc <- dat %>%
#   dplyr::select(rate, choice, prior_benefit_2, ratio_ev_to_muni_area, driver, home_owner, age, educ, language, empl_sect, fin_cond,
#                 left_right, sal_glob, sal_env, region, urban_rural) %>%
#   mutate("Region: Geneva" = ifelse(region == 1, 1, 0),
#          "Region: Middle Land" = ifelse(region == 2, 1, 0),
#          "Region: North East" = ifelse(region == 3, 1, 0),
#          "Region: Zurich" = ifelse(region == 4, 1, 0),
#          "Region: East" = ifelse(region == 5, 1, 0),
#          "Region: Central" = ifelse(region == 6, 1, 0),
#          "Region: Ticino" = ifelse(region == 7, 1, 0),
#          "Urban Area" = ifelse(urban_rural == 1, 1, 0),
#          "Intermediate Area" = ifelse(urban_rural == 2, 1, 0),
#          "Rural Area" = ifelse(urban_rural == 3, 1, 0),) %>%
#   dplyr::select(-region, -urban_rural) %>%
#   mutate_all(as.character) %>%
#   mutate_all(as.numeric)
#
# p_desc <- dat_desc %>%
#   mutate(ratio_ev_to_muni_area = round(ratio_ev_to_muni_area, 0)) %>%
#   pivot_longer(., everything(), names_to = "Question", values_to = "Response") %>%
#   mutate(Question = factor(Question, levels = c("rate", "choice", "prior_benefit_2", "ratio_ev_to_muni_area", "driver", "home_owner", "age",
#                                                 "educ", "language", "empl_sect", "fin_cond",
#                                                 "left_right", "sal_glob", "sal_env",
#                                                 "Region: Geneva",
#                                                 "Region: Middle Land",
#                                                 "Region: North East",
#                                                 "Region: Zurich",
#                                                 "Region: East",
#                                                 "Region: Central",
#                                                 "Region: Ticino",
#                                                 "Urban Area",
#                                                 "Intermediate Area",
#                                                 "Rural Area"))) %>%
#   group_by(Question, Response) %>%
#   count(name = "freq") %>%
#   mutate(Response = factor(Response, levels = as.character(c(0:14, NA)))) %>%
#   ggplot(aes(x = Response, y = freq)) +
#   geom_col() + labs(x = "", y = "") +
#   facet_wrap(~Question, scales = "free_x",
#              labeller = labeller(Question = c("driver" = "Driver",
#                                               "educ" = "Education",
#                                               "age" = "Age",
#                                               "empl_sect" = "Employment Sector",
#                                               "fin_cond" = "Financial Condition",
#                                               "home_owner" = "Home Owner",
#                                               "left_right" = "Left−Right",
#                                               "prior_benefit_2" = "Perceived Effectiveness\n of Prior Benefits",
#                                               "rate" = "Support \n(Rate Outcome)",
#                                               "choice" = "Support \n(Choice Outcome)",
#                                               "ratio_ev_to_muni_area" = "EV Charging Stations",
#                                               "sal_env" = "Salience: \nEnvironment and Climate",
#                                               "sal_glob" = "Salience: \nGlobalisation",
#                                               "language" = "French",
#                                               "Urban Area" = "Urban Area",
#                                               "Intermediate Area" = "Intermediate Area",
#                                               "Rural Area"  = "Rural Area",
#                                               "Region: Geneva" = "Region: Geneva",
#                                               "Region: Middle Land" = "Region: Middle Land",
#                                               "Region: North East" = "Region: North East",
#                                               "Region: Zurich" = "Region: Zurich",
#                                               "Region: East" = "Region: East",
#                                               "Region: Central" = "Region: Central",
#                                               "Region: Ticino" = "Region: Ticino"))) +
#   theme_light()
# p_desc
# ggsave(p_desc, filename = "Plots/p_desc.pdf", height = 16, width = 10)
#
#
# labs_desc <- c("Support (Rate Outcome)", "Support (Choice Outcome)", "Perceived Effectiveness of Prior Benefits",
#                "EV Charging Stations",  "Driver", "Home Owner", "Age", "Education", "French",
#                "Employment Sector", "Financial Condition", "Left-Right", "Salience: Globalisation", "Salience: Environment and Climate",
#                "Region: Geneva", "Region: Middle Land", "Region: North East", "Region: Zurich", "Region: East", "Region: Central", "Region: Ticino", "Urban Area", "Intermediate Area", "Rural Area")
#
# library(stargazer)
# stargazer(dat_desc,
#           out.header = F,
#           no.space = TRUE,
#           label = "tab:summary_stats",
#           column.sep.width = "3pt",
#           font.size = "footnotesize",
#           covariate.labels = labs_desc,
#           out = "Tables/summary_stats.tex"
#           )
#
# library(Hmisc)
# correlation_matrix <- cor(dat_desc %>% mutate_all(., as.numeric), use = "pairwise.complete.obs")
# correlation_matrix <- round(correlation_matrix, 2)
# correlation_matrix[upper.tri(correlation_matrix)] <- NA
# diag(correlation_matrix) <- NA
# colnames(correlation_matrix) <- rownames(correlation_matrix) <- labs_desc
# correlation_matrix1 <- correlation_matrix[,1:12]
# correlation_matrix2 <- correlation_matrix[,13:ncol(correlation_matrix)]
#
# stargazer(correlation_matrix1, title="Correlation Matrix Part 1",
#           float.env = "sidewaystable",
#           type = "latex",
#           out.header = F,
#           no.space = TRUE, # to remove the spaces after each line of coefficients
#           column.sep.width = "1pt", # to reduce column width
#           font.size = "footnotesize", # to make font size smaller
#           label = "tab:correlation_pt1",
#           out = "Tables/correlation_pt1.tex"
#           # covariate.labels = labs_desc,
#           # dep.var.labels = labs_desc
# )
# stargazer(correlation_matrix2, title="Correlation Matrix  Part 2",
#           float.env = "sidewaystable",
#           type = "latex",
#           out.header = F,
#           no.space = TRUE, # to remove the spaces after each line of coefficients
#           column.sep.width = "1pt", # to reduce column width
#           font.size = "footnotesize", # to make font size smaller
#           label = "tab:correlation_pt2",
#           out = "Tables/correlation_pt2.tex"
# )
library(cregg)
library(ggsci)
dat <- dat %>% mutate(NIMBY = as.factor(NIMBY),
environment_score = ifelse(environment_score >3.5, 1, 0),
environment_score = factor(environment_score, levels = c(0, 1)))
dat <- dat %>%
mutate(left_right_bins = case_when(left_right <=3 ~ "Left",
left_right >=4 & left_right <=6 ~ "Centre",
left_right >=7 ~ "Right")) %>%
mutate(left_right_bins = factor(left_right_bins, levels = c("Left", "Centre", "Right")))
model1 <- lm(choice ~ attrib1_lab + attrib2_lab +  attrib3_lab +  attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, data = dat %>% filter(NIMBY == 0))
summary(model1)
amce <- cj(data = dat %>% filter(NIMBY == 0), rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "amce")
amce
p_baseline <- amce %>%
mutate(
level = factor(level, levels = c("Agri-PV systems on greenhouses and replacement of polytunnels", "Horizontal open space Agri-PV systems on pasture or arable land", "Vertical open space Agri-PV systems on pasture or arable land",
"Up to one football pitch", "Up to 5 football pitches", "Up to 10 football pitches",
"0-500 meters", "500-1500 meters", "1500-4500 meters",
"Municipality", "Regional energy supplier", "Farmers", "Landowner", "Energy cooperative", "External investors",
"0-5% reduction in crop yield", "6-10% reduction in crop yield", "11-20% reduction in crop yield", "21-40% reduction in crop yield", "41-80% reduction in crop yield",
"0-5% increase in own production", "6-10% increase in own production ", "11-20% increase in own production", "21-40% Erhöhung der Eigenproduktion", "41-80% Erhöhung der Eigenproduktion",
"0-5% higher income", "6-10% higher income", "11-20% higher income", "21-40% higher income", "41-80% higher income"))
# by = factor(BY, levels = c("0", "1")),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate)) +
geom_pointrange(aes(ymin = lower, ymax = upper)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~., scales = "free_y", space = "free_y") +
theme_light() +
coord_flip() +
labs(y ="AMCE", x = "", subtitle = "only NIMBY control") +
theme(panel.grid = element_blank(),
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_baseline, file = "plots/p_baseline.pdf", width = 7, height = 7)
export_table <- function(name, col_label, formula, by){
require(jtools)
require(kableExtra)
require(dplyr)
if (!is.null(by)) {
by_cregg <- as.formula(by)
} else {
by_cregg <- by
}
formula_cregg <- as.formula(formula)
amce_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "amce")
mm_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "mm", h0 = 0.5)
amce_by <- amce_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% dplyr::rename("estimate AMCE" = "estimate", "p-value AMCE" = "p")
mm_by <- mm_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% dplyr::rename("estimate MM" = "estimate", "p-value MM" = "p")
if (!is.null(by)) {
formula_lm <- paste0(unlist(strsplit(as.character(formula), "+",  fixed = T)), collapse = paste0("*", gsub("~", "", by), " +"))
} else {
formula_lm <- formula_cregg
}
res <- lm(formula_lm, dat)
x <- summary(res)
x <- coeftest(res, vcov = vcovCL(res, cluster = ~id, type = "HC"))
if (!is.null(by)) {
out <- mm_by %>% dplyr::select(level, feature, BY, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level", "BY"))
} else {
out <- mm_by %>% dplyr::select(level, feature, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level"))
}
gof <- as.data.frame(rbind(c("Number of observations", "", "",  "",nobs(res), ""),
c("R2", "", "",  "",sapply(lapply(list(res), summ), attr, "rsq"), ""),
c("Adj.R2", "", "",  "",sapply(lapply(list(res), summ), attr, "arsq"), ""))) %>%
mutate(V2 = factor(V2),
V5 = round(as.numeric(V5), 4)) %>%
mutate_if(is.double, as.character)
if (!is.null(by)) {gof <- cbind(gof[,1:2], rep("", nrow(gof)), gof[,3:6])}
colnames(gof) <- colnames(out)
options(scipen = 999)
c_names <- if(!is.null(by)) {
c("Attribute levels", col_label, "Estimate", "p-value", "Estimate", "p-value")
} else {
c("Attribute levels", "Estimate", "p-value", "Estimate", "p-value")
}
tab <- out %>%
dplyr::select(-feature) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), round, 4) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), as.character) %>%
bind_rows(gof %>% dplyr::select(-feature)) %>%
# dplyr::select(all_of("Attribute levels", col_label, c("Estimate", "p-value", "Estimate", "p-value")))
mutate(`estimate AMCE` = ifelse(is.na(`p-value AMCE`), "baseline", `estimate AMCE`)) %>%
mutate(`p-value AMCE` = ifelse(is.na(`p-value AMCE`), "", `p-value AMCE`)) %>%
mutate(`estimate MM` = ifelse(is.na(`estimate MM`), "", `estimate MM`)) %>%
kable(format = 'latex', booktabs = TRUE, col.names = c_names, caption = paste(name, "estimates"), longtable = T) %>%
kable_styling(font_size = 9) %>%
footnote("Standard errors for the computation of p-values were clustered by respondent id. For MM estimates that are derived from AMCEs (for details, see Leeper et al., 2018), p-values are computed under null hypothesis that the estimate is equal to 0.5 for the binary choice outcome where respondents choose the preferred policy package when presented with two policy pairs with randomized attribute levels. The label for the attribute level ’Percentage of this country's votes in line with Switzerland's position at the UN Security Council’ was replaced with to ’UN Security Council votes in line with Switzerland’ for better readability.",
footnote_as_chunk = T,
threeparttable = TRUE,
)
if (!is.null(by)){
tab <- tab %>% add_header_above(c(" " = 2, "MM" = 2, "AMCE" = 2))
} else {
tab <- tab %>% add_header_above(c(" " = 1, "MM" = 2, "AMCE" = 2))
}
attr <- data.frame(attribute_levels = c("Recipient developing country", "Number of climate migrants to accept from this country per year",
"Climate aid to give to this country (CHF) per year", "Value of Swiss trade with this country",
"Extreme weather event", "UN Security Council votes in line with Switzerland"),
len = c(4,6,5,3,4,3))
attributes_to_keep <- as.numeric(unlist(stri_extract_all_regex(unique(out$feature), "[0-9]")))
attr <- attr[attributes_to_keep,]
attr$end <- cumsum(attr$len)
attr$start <- attr$end - attr$len + 1
len <- ifelse(!is.null(by), length(unique(out$BY)), 1)
for (i in 1:len){
add <- (i-1)*length(levels(out$level))
for (j in 1:length(attr$attribute_levels)){
tab <- tab %>% pack_rows(attr$attribute_levels[j], attr$start[j] + add, attr$end[j] + add)
}
}
tab <- tab %>% kableExtra::row_spec(length(levels(out$level))*len, extra_latex_after = "\\midrule")
writeLines(tab, paste0("tables/", name, ".tex"))
}
export_table("Baseline", "", "choice ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab", NULL)
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~NIMBY)
p_NIMBY <- mm_by %>%
mutate(by = factor(BY, levels = c("0", "1")),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="MM", x = "", subtitle = "Interaction with NIMBY treatment, binary recoding of rate outcoome") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_NIMBY, file = "plots/p_NIMBY.pdf", width = 7, height = 7)
dat <- dat %>%
mutate(circle1 = factor(circle1, levels = c(0,1)),
circle2 = factor(circle2, levels = c(0,1)),
circle3 = factor(circle3, levels = c(0,1)),
circle = factor(circle, levels = c(0,1)))
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~circle)
p_environment_score <- mm_by %>%
mutate(by = factor(BY, levels = c("0", "1")),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="MM", x = "", subtitle = "Interaction with environment_score, binary recoding of rate outcoome") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_environment_score, file = "plots/p_environment_score.pdf", width = 7, height = 7)
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~left_right_bins)
p_left_right_bins <- mm_by %>%
mutate(by = factor(BY, levels = c("Left", "Centre", "Right")),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="AMCE", x = "", subtitle = "Interaction with left-right, binary recoding of rate outcoome") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_left_right_bins, file = "plots/p_left_right_bins.pdf", width = 7, height = 7)
dat <- dat %>%
mutate(left_right_binary = ifelse(left_right >= 5, "Right", "Left")) %>%
mutate(left_right_binary = factor(left_right_binary, levels = c("Right", "Left")))
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~left_right_binary)
p_left_right_binary <- mm_by %>%
mutate(by = factor(BY, levels = c("Left", "Right")),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="MM", x = "", subtitle = "Interaction with left-right (Right >=5), binary recoding of rate outcoome") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_left_right_binary, file = "plots/p_left_right_binary.pdf", width = 7, height = 7)
dat <- dat %>%
mutate(urban_rural = factor(urban_rural, levels = c(1,2,3)))
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~urban_rural)
p_urban_rural <- mm_by %>%
mutate(by = factor(BY, levels = c(1, 2, 3)),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="MM", x = "", subtitle = "Interaction with urban_rural, binary recoding of rate outcoome") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_urban_rural, file = "plots/p_urban_rural.pdf", width = 7, height = 7)
