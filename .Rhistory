# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="AMCE", x = "", subtitle = "Interaction with environment_score") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_environment_score, file = "plots/p_environment_score.pdf", width = 7, height = 7)
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~left_right_bins)
p_left_right_bins <- mm_by %>%
mutate(by = factor(BY, levels = c("Left", "Centre", "Right")),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="AMCE", x = "", subtitle = "Interaction with left-right") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_left_right_bins, file = "plots/p_left_right_bins.pdf", width = 7, height = 7)
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~left_right_binary)
p_left_right_binary <- mm_by %>%
mutate(by = factor(BY, levels = c("Left", "Right")),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="AMCE", x = "", subtitle = "Interaction with left-right (Right >=5)") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_left_right_binary, file = "plots/p_left_right_binary.pdf", width = 7, height = 7)
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~urban_rural)
dat <- dat %>%
mutate(urban_rural = factor(urban_rural, levels = c(1,2,3)))
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~urban_rural)
p_urban_rural <- mm_by %>%
mutate(by = factor(BY, levels = c(1, 2, 3)),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="AMCE", x = "", subtitle = "Interaction with urban_rural") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_urban_rural, file = "plots/p_urban_rural.pdf", width = 7, height = 7)
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~left_right_binary)
p_left_right_binary <- mm_by %>%
mutate(by = factor(BY, levels = c("Left", "Right")),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="AMCE", x = "", subtitle = "Interaction with left-right (Right >=5)") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_left_right_binary, file = "plots/p_left_right_binary.pdf", width = 7, height = 7)
dat <- dat %>%
mutate(urban_rural = factor(urban_rural, levels = c(1,2,3)))
mm_by <- cj(dat, rate_binary ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab + attrib7_lab, id = ~id, estimate = "mm", by = ~urban_rural)
p_urban_rural <- mm_by %>%
mutate(by = factor(BY, levels = c(1, 2, 3)),
# feature_lab = "",
# feature_lab = ifelse(feature == "attrib1_lab", "Recipient developing country", feature_lab),
# feature_lab = ifelse(feature == "attrib2_lab", "Number of climate\nmigrants to accept\nfrom this country per year", feature_lab),
# feature_lab = ifelse(feature == "attrib3_lab", "Climate aid to give\nto this country\n(CHF) per year", feature_lab),
# feature_lab = ifelse(feature == "attrib4_lab", "Value of Swiss\ntrade with this\ncountry", feature_lab),
# feature_lab = ifelse(feature == "attrib5_lab", "Extreme weather event", feature_lab),
# feature_lab = ifelse(feature == "attrib6_lab", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council", feature_lab),
# feature_lab = factor(feature_lab, levels = c("Recipient developing country", "Number of climate\nmigrants to accept\nfrom this country per year",
#                                              "Climate aid to give\nto this country\n(CHF) per year", "Value of Swiss\ntrade with this\ncountry",
#                                              "Extreme weather event", "Percentage of this\ncountry's votes\nin line with Switzerland's\nposition at the UN\nSecurity Council"))
) %>%
ggplot(aes(level, estimate, shape = by, col = by)) +
geom_pointrange(aes(ymin = lower, ymax = upper), position = position_dodge(.5)) +
scale_x_discrete(limits=rev) +
facet_grid(feature~ ., scales = "free_y",
space = "free_y"
) +
theme_light() +
coord_flip() +
scale_colour_npg() +
labs(y ="AMCE", x = "", subtitle = "Interaction with urban_rural") +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text.y = element_text(angle = 0),
strip.background = element_rect(fill = "white"),
strip.text = element_text(colour = "black", size =9)) +
geom_hline(yintercept = 0.5, lty = 2, alpha = 0.7, color = "gray50")
ggsave(p_urban_rural, file = "plots/p_urban_rural.pdf", width = 7, height = 7)
export_table <- function(name, col_label, formula, by){
if (!is.null(by)) {
by_cregg <- as.formula(by)
} else {
by_cregg <- by
}
formula_cregg <- as.formula(formula)
amce_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "amce")
mm_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "mm", h0 = 0.5)
amce_by <- amce_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% rename("estimate AMCE" = "estimate", "p-value AMCE" = "p")
mm_by <- mm_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% rename("estimate MM" = "estimate", "p-value MM" = "p")
if (!is.null(by)) {
formula_lm <- paste0(unlist(strsplit(as.character(formula), "+",  fixed = T)), collapse = paste0("*", gsub("~", "", by), " +"))
} else {
formula_lm <- formula_cregg
}
res <- lm(formula_lm, dat)
x <- summary(res)
x <- coeftest(res, vcov = vcovCL(res, cluster = ~id, type = "HC"))
if (!is.null(by)) {
out <- mm_by %>% dplyr::select(level, feature, BY, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level", "BY"))
} else {
out <- mm_by %>% dplyr::select(level, feature, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level"))
}
gof <- as.data.frame(rbind(c("Number of observations", "", "",  "",nobs(res), ""),
c("R2", "", "",  "",sapply(lapply(list(res), summ), attr, "rsq"), ""),
c("Adj.R2", "", "",  "",sapply(lapply(list(res), summ), attr, "arsq"), ""))) %>%
mutate(V2 = factor(V2),
V5 = round(as.numeric(V5), 4)) %>%
mutate_if(is.double, as.character)
if (!is.null(by)) {gof <- cbind(gof[,1:2], rep("", nrow(gof)), gof[,3:6])}
colnames(gof) <- colnames(out)
options(scipen = 999)
c_names <- if(!is.null(by)) {
c("Attribute levels", col_label, "Estimate", "p-value", "Estimate", "p-value")
} else {
c("Attribute levels", "Estimate", "p-value", "Estimate", "p-value")
}
tab <- out %>%
dplyr::select(-feature) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), round, 4) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), as.character) %>%
bind_rows(gof %>% dplyr::select(-feature)) %>%
# dplyr::select(all_of("Attribute levels", col_label, c("Estimate", "p-value", "Estimate", "p-value")))
mutate(`estimate AMCE` = ifelse(is.na(`p-value AMCE`), "baseline", `estimate AMCE`)) %>%
mutate(`p-value AMCE` = ifelse(is.na(`p-value AMCE`), "", `p-value AMCE`)) %>%
mutate(`estimate MM` = ifelse(is.na(`estimate MM`), "", `estimate MM`)) %>%
kable(format = 'latex', booktabs = TRUE, col.names = c_names, caption = paste(name, "estimates"), longtable = T) %>%
kable_styling(font_size = 9) %>%
footnote("Standard errors for the computation of p-values were clustered by respondent id. For MM estimates that are derived from AMCEs (for details, see Leeper et al., 2018), p-values are computed under null hypothesis that the estimate is equal to 0.5 for the binary choice outcome where respondents choose the preferred policy package when presented with two policy pairs with randomized attribute levels. The label for the attribute level ’Percentage of this country's votes in line with Switzerland's position at the UN Security Council’ was replaced with to ’UN Security Council votes in line with Switzerland’ for better readability.",
footnote_as_chunk = T,
threeparttable = TRUE,
)
if (!is.null(by)){
tab <- tab %>% add_header_above(c(" " = 2, "MM" = 2, "AMCE" = 2))
} else {
tab <- tab %>% add_header_above(c(" " = 1, "MM" = 2, "AMCE" = 2))
}
attr <- data.frame(attribute_levels = c("Recipient developing country", "Number of climate migrants to accept from this country per year",
"Climate aid to give to this country (CHF) per year", "Value of Swiss trade with this country",
"Extreme weather event", "UN Security Council votes in line with Switzerland"),
len = c(4,6,5,3,4,3))
attributes_to_keep <- as.numeric(unlist(stri_extract_all_regex(unique(out$feature), "[0-9]")))
attr <- attr[attributes_to_keep,]
attr$end <- cumsum(attr$len)
attr$start <- attr$end - attr$len + 1
len <- ifelse(!is.null(by), length(unique(out$BY)), 1)
for (i in 1:len){
add <- (i-1)*length(levels(out$level))
for (j in 1:length(attr$attribute_levels)){
tab <- tab %>% pack_rows(attr$attribute_levels[j], attr$start[j] + add, attr$end[j] + add)
}
}
tab <- tab %>% kableExtra::row_spec(length(levels(out$level))*len, extra_latex_after = "\\midrule")
writeLines(tab, paste0("tables/", name, ".tex"))
}
export_table("Baseline", "", "choice ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab", NULL)
export_table <- function(name, col_label, formula, by){
if (!is.null(by)) {
by_cregg <- as.formula(by)
} else {
by_cregg <- by
}
formula_cregg <- as.formula(formula)
amce_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "amce")
mm_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "mm", h0 = 0.5)
amce_by <- amce_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% rename("estimate AMCE" = "estimate", "p-value AMCE" = "p")
mm_by <- mm_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% rename("estimate MM" = "estimate", "p-value MM" = "p")
if (!is.null(by)) {
formula_lm <- paste0(unlist(strsplit(as.character(formula), "+",  fixed = T)), collapse = paste0("*", gsub("~", "", by), " +"))
} else {
formula_lm <- formula_cregg
}
res <- lm(formula_lm, dat)
x <- summary(res)
x <- coeftest(res, vcov = vcovCL(res, cluster = ~id, type = "HC"))
if (!is.null(by)) {
out <- mm_by %>% dplyr::select(level, feature, BY, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level", "BY"))
} else {
out <- mm_by %>% dplyr::select(level, feature, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level"))
}
gof <- as.data.frame(rbind(c("Number of observations", "", "",  "",nobs(res), ""),
c("R2", "", "",  "",sapply(lapply(list(res), summ), attr, "rsq"), ""),
c("Adj.R2", "", "",  "",sapply(lapply(list(res), summ), attr, "arsq"), ""))) %>%
mutate(V2 = factor(V2),
V5 = round(as.numeric(V5), 4)) %>%
mutate_if(is.double, as.character)
if (!is.null(by)) {gof <- cbind(gof[,1:2], rep("", nrow(gof)), gof[,3:6])}
colnames(gof) <- colnames(out)
options(scipen = 999)
c_names <- if(!is.null(by)) {
c("Attribute levels", col_label, "Estimate", "p-value", "Estimate", "p-value")
} else {
c("Attribute levels", "Estimate", "p-value", "Estimate", "p-value")
}
tab <- out %>%
dplyr::select(-feature) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), round, 4) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), as.character) %>%
bind_rows(gof %>% dplyr::select(-feature)) %>%
# dplyr::select(all_of("Attribute levels", col_label, c("Estimate", "p-value", "Estimate", "p-value")))
mutate(`estimate AMCE` = ifelse(is.na(`p-value AMCE`), "baseline", `estimate AMCE`)) %>%
mutate(`p-value AMCE` = ifelse(is.na(`p-value AMCE`), "", `p-value AMCE`)) %>%
mutate(`estimate MM` = ifelse(is.na(`estimate MM`), "", `estimate MM`)) %>%
kable(format = 'latex', booktabs = TRUE, col.names = c_names, caption = paste(name, "estimates"), longtable = T) %>%
kable_styling(font_size = 9) %>%
footnote("Standard errors for the computation of p-values were clustered by respondent id. For MM estimates that are derived from AMCEs (for details, see Leeper et al., 2018), p-values are computed under null hypothesis that the estimate is equal to 0.5 for the binary choice outcome where respondents choose the preferred policy package when presented with two policy pairs with randomized attribute levels. The label for the attribute level ’Percentage of this country's votes in line with Switzerland's position at the UN Security Council’ was replaced with to ’UN Security Council votes in line with Switzerland’ for better readability.",
footnote_as_chunk = T,
threeparttable = TRUE,
)
if (!is.null(by)){
tab <- tab %>% add_header_above(c(" " = 2, "MM" = 2, "AMCE" = 2))
} else {
tab <- tab %>% add_header_above(c(" " = 1, "MM" = 2, "AMCE" = 2))
}
attr <- data.frame(attribute_levels = c("Recipient developing country", "Number of climate migrants to accept from this country per year",
"Climate aid to give to this country (CHF) per year", "Value of Swiss trade with this country",
"Extreme weather event", "UN Security Council votes in line with Switzerland"),
len = c(4,6,5,3,4,3))
attributes_to_keep <- as.numeric(unlist(stri_extract_all_regex(unique(out$feature), "[0-9]")))
attr <- attr[attributes_to_keep,]
attr$end <- cumsum(attr$len)
attr$start <- attr$end - attr$len + 1
len <- ifelse(!is.null(by), length(unique(out$BY)), 1)
for (i in 1:len){
add <- (i-1)*length(levels(out$level))
for (j in 1:length(attr$attribute_levels)){
tab <- tab %>% pack_rows(attr$attribute_levels[j], attr$start[j] + add, attr$end[j] + add)
}
}
tab <- tab %>% kableExtra::row_spec(length(levels(out$level))*len, extra_latex_after = "\\midrule")
writeLines(tab, paste0("tables/", name, ".tex"))
}
formula =  "choice ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab"
formula_cregg <- as.formula(formula)
amce_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "amce")
by = NULL
col_label = " "
name = "Baseline"
if (!is.null(by)) {
by_cregg <- as.formula(by)
} else {
by_cregg <- by
}
formula_cregg <- as.formula(formula)
amce_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "amce")
mm_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "mm", h0 = 0.5)
mm_by
amce_by <- amce_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% rename("estimate AMCE" = "estimate", "p-value AMCE" = "p")
amce_by <- amce_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% dplyr::rename("estimate AMCE" = "estimate", "p-value AMCE" = "p")
mm_by <- mm_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% dplyr::rename("estimate MM" = "estimate", "p-value MM" = "p")
export_table <- function(name, col_label, formula, by){
if (!is.null(by)) {
by_cregg <- as.formula(by)
} else {
by_cregg <- by
}
formula_cregg <- as.formula(formula)
amce_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "amce")
mm_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "mm", h0 = 0.5)
amce_by <- amce_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% dplyr::rename("estimate AMCE" = "estimate", "p-value AMCE" = "p")
mm_by <- mm_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% dplyr::rename("estimate MM" = "estimate", "p-value MM" = "p")
if (!is.null(by)) {
formula_lm <- paste0(unlist(strsplit(as.character(formula), "+",  fixed = T)), collapse = paste0("*", gsub("~", "", by), " +"))
} else {
formula_lm <- formula_cregg
}
res <- lm(formula_lm, dat)
x <- summary(res)
x <- coeftest(res, vcov = vcovCL(res, cluster = ~id, type = "HC"))
if (!is.null(by)) {
out <- mm_by %>% dplyr::select(level, feature, BY, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level", "BY"))
} else {
out <- mm_by %>% dplyr::select(level, feature, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level"))
}
gof <- as.data.frame(rbind(c("Number of observations", "", "",  "",nobs(res), ""),
c("R2", "", "",  "",sapply(lapply(list(res), summ), attr, "rsq"), ""),
c("Adj.R2", "", "",  "",sapply(lapply(list(res), summ), attr, "arsq"), ""))) %>%
mutate(V2 = factor(V2),
V5 = round(as.numeric(V5), 4)) %>%
mutate_if(is.double, as.character)
if (!is.null(by)) {gof <- cbind(gof[,1:2], rep("", nrow(gof)), gof[,3:6])}
colnames(gof) <- colnames(out)
options(scipen = 999)
c_names <- if(!is.null(by)) {
c("Attribute levels", col_label, "Estimate", "p-value", "Estimate", "p-value")
} else {
c("Attribute levels", "Estimate", "p-value", "Estimate", "p-value")
}
tab <- out %>%
dplyr::select(-feature) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), round, 4) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), as.character) %>%
bind_rows(gof %>% dplyr::select(-feature)) %>%
# dplyr::select(all_of("Attribute levels", col_label, c("Estimate", "p-value", "Estimate", "p-value")))
mutate(`estimate AMCE` = ifelse(is.na(`p-value AMCE`), "baseline", `estimate AMCE`)) %>%
mutate(`p-value AMCE` = ifelse(is.na(`p-value AMCE`), "", `p-value AMCE`)) %>%
mutate(`estimate MM` = ifelse(is.na(`estimate MM`), "", `estimate MM`)) %>%
kable(format = 'latex', booktabs = TRUE, col.names = c_names, caption = paste(name, "estimates"), longtable = T) %>%
kable_styling(font_size = 9) %>%
footnote("Standard errors for the computation of p-values were clustered by respondent id. For MM estimates that are derived from AMCEs (for details, see Leeper et al., 2018), p-values are computed under null hypothesis that the estimate is equal to 0.5 for the binary choice outcome where respondents choose the preferred policy package when presented with two policy pairs with randomized attribute levels. The label for the attribute level ’Percentage of this country's votes in line with Switzerland's position at the UN Security Council’ was replaced with to ’UN Security Council votes in line with Switzerland’ for better readability.",
footnote_as_chunk = T,
threeparttable = TRUE,
)
if (!is.null(by)){
tab <- tab %>% add_header_above(c(" " = 2, "MM" = 2, "AMCE" = 2))
} else {
tab <- tab %>% add_header_above(c(" " = 1, "MM" = 2, "AMCE" = 2))
}
attr <- data.frame(attribute_levels = c("Recipient developing country", "Number of climate migrants to accept from this country per year",
"Climate aid to give to this country (CHF) per year", "Value of Swiss trade with this country",
"Extreme weather event", "UN Security Council votes in line with Switzerland"),
len = c(4,6,5,3,4,3))
attributes_to_keep <- as.numeric(unlist(stri_extract_all_regex(unique(out$feature), "[0-9]")))
attr <- attr[attributes_to_keep,]
attr$end <- cumsum(attr$len)
attr$start <- attr$end - attr$len + 1
len <- ifelse(!is.null(by), length(unique(out$BY)), 1)
for (i in 1:len){
add <- (i-1)*length(levels(out$level))
for (j in 1:length(attr$attribute_levels)){
tab <- tab %>% pack_rows(attr$attribute_levels[j], attr$start[j] + add, attr$end[j] + add)
}
}
tab <- tab %>% kableExtra::row_spec(length(levels(out$level))*len, extra_latex_after = "\\midrule")
writeLines(tab, paste0("tables/", name, ".tex"))
}
export_table("Baseline", "", "choice ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab", NULL)
??summ
export_table <- function(name, col_label, formula, by){
require(jtools)
require(kableExtra)
require(dplyr)
if (!is.null(by)) {
by_cregg <- as.formula(by)
} else {
by_cregg <- by
}
formula_cregg <- as.formula(formula)
amce_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "amce")
mm_by <- cj(dat, formula_cregg, id = ~id, by = by_cregg, estimate = "mm", h0 = 0.5)
amce_by <- amce_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% dplyr::rename("estimate AMCE" = "estimate", "p-value AMCE" = "p")
mm_by <- mm_by %>% dplyr::select(any_of(c("BY", "feature", "level", "estimate", "p"))) %>% dplyr::rename("estimate MM" = "estimate", "p-value MM" = "p")
if (!is.null(by)) {
formula_lm <- paste0(unlist(strsplit(as.character(formula), "+",  fixed = T)), collapse = paste0("*", gsub("~", "", by), " +"))
} else {
formula_lm <- formula_cregg
}
res <- lm(formula_lm, dat)
x <- summary(res)
x <- coeftest(res, vcov = vcovCL(res, cluster = ~id, type = "HC"))
if (!is.null(by)) {
out <- mm_by %>% dplyr::select(level, feature, BY, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level", "BY"))
} else {
out <- mm_by %>% dplyr::select(level, feature, `estimate MM`, `p-value MM`) %>% left_join(amce_by, by = c("feature", "level"))
}
gof <- as.data.frame(rbind(c("Number of observations", "", "",  "",nobs(res), ""),
c("R2", "", "",  "",sapply(lapply(list(res), summ), attr, "rsq"), ""),
c("Adj.R2", "", "",  "",sapply(lapply(list(res), summ), attr, "arsq"), ""))) %>%
mutate(V2 = factor(V2),
V5 = round(as.numeric(V5), 4)) %>%
mutate_if(is.double, as.character)
if (!is.null(by)) {gof <- cbind(gof[,1:2], rep("", nrow(gof)), gof[,3:6])}
colnames(gof) <- colnames(out)
options(scipen = 999)
c_names <- if(!is.null(by)) {
c("Attribute levels", col_label, "Estimate", "p-value", "Estimate", "p-value")
} else {
c("Attribute levels", "Estimate", "p-value", "Estimate", "p-value")
}
tab <- out %>%
dplyr::select(-feature) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), round, 4) %>%
mutate_at(vars("estimate MM", "p-value MM", "estimate AMCE", "p-value AMCE"), as.character) %>%
bind_rows(gof %>% dplyr::select(-feature)) %>%
# dplyr::select(all_of("Attribute levels", col_label, c("Estimate", "p-value", "Estimate", "p-value")))
mutate(`estimate AMCE` = ifelse(is.na(`p-value AMCE`), "baseline", `estimate AMCE`)) %>%
mutate(`p-value AMCE` = ifelse(is.na(`p-value AMCE`), "", `p-value AMCE`)) %>%
mutate(`estimate MM` = ifelse(is.na(`estimate MM`), "", `estimate MM`)) %>%
kable(format = 'latex', booktabs = TRUE, col.names = c_names, caption = paste(name, "estimates"), longtable = T) %>%
kable_styling(font_size = 9) %>%
footnote("Standard errors for the computation of p-values were clustered by respondent id. For MM estimates that are derived from AMCEs (for details, see Leeper et al., 2018), p-values are computed under null hypothesis that the estimate is equal to 0.5 for the binary choice outcome where respondents choose the preferred policy package when presented with two policy pairs with randomized attribute levels. The label for the attribute level ’Percentage of this country's votes in line with Switzerland's position at the UN Security Council’ was replaced with to ’UN Security Council votes in line with Switzerland’ for better readability.",
footnote_as_chunk = T,
threeparttable = TRUE,
)
if (!is.null(by)){
tab <- tab %>% add_header_above(c(" " = 2, "MM" = 2, "AMCE" = 2))
} else {
tab <- tab %>% add_header_above(c(" " = 1, "MM" = 2, "AMCE" = 2))
}
attr <- data.frame(attribute_levels = c("Recipient developing country", "Number of climate migrants to accept from this country per year",
"Climate aid to give to this country (CHF) per year", "Value of Swiss trade with this country",
"Extreme weather event", "UN Security Council votes in line with Switzerland"),
len = c(4,6,5,3,4,3))
attributes_to_keep <- as.numeric(unlist(stri_extract_all_regex(unique(out$feature), "[0-9]")))
attr <- attr[attributes_to_keep,]
attr$end <- cumsum(attr$len)
attr$start <- attr$end - attr$len + 1
len <- ifelse(!is.null(by), length(unique(out$BY)), 1)
for (i in 1:len){
add <- (i-1)*length(levels(out$level))
for (j in 1:length(attr$attribute_levels)){
tab <- tab %>% pack_rows(attr$attribute_levels[j], attr$start[j] + add, attr$end[j] + add)
}
}
tab <- tab %>% kableExtra::row_spec(length(levels(out$level))*len, extra_latex_after = "\\midrule")
writeLines(tab, paste0("tables/", name, ".tex"))
}
export_table("Baseline", "", "choice ~ attrib1_lab + attrib2_lab + attrib3_lab + attrib4_lab + attrib5_lab + attrib6_lab", NULL)
